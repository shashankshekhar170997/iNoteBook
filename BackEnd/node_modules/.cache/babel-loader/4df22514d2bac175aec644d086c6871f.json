{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\VS. CODE\\\\REACT JS\\\\inotebook\\\\src\\\\context api\\\\NoteState.js\",\n    _s = $RefreshSig$();\n\n// import { useState } from \"react\";\nimport NoteContext from \"./notes/noteContext\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NoteState = props => {\n  _s();\n\n  const host = \"http://localhost:5000\";\n  const notesInitial = [];\n  const [notes, setNotes] = useState(notesInitial); //Get all Notes\n\n  const getNotes = async () => {\n    //API CALL\n    const response = await fetch(`${host}/api/notes/fetchallnotes/`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjE1MmMxYzQ0MDc2N2I0YzRmNmVhNzA5In0sImlhdCI6MTYzMjgxMzUwOH0.tppekgz-Ztj1cyCEwp2CYG93NbhuBKXW8dNfcxAvXaw\"\n      }\n    });\n    const json = await response.json();\n    console.log(json);\n    setNotes(json);\n  }; //Add a Note\n\n\n  const addNote = async (title, description, tag) => {\n    //TODO: API CALL\n    //API CALL\n    const response = await fetch(`${host}/api/notes/addnote`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjE1MmMxYzQ0MDc2N2I0YzRmNmVhNzA5In0sImlhdCI6MTYzMjgxMzUwOH0.tppekgz-Ztj1cyCEwp2CYG93NbhuBKXW8dNfcxAvXaw\"\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const json = await response.json();\n    console.log(json);\n    console.log(\"adding a new note\");\n    const note = json; // const note = await response.json()\n    //here concat return new array.\n  }; //Delete a Note\n\n\n  const deleteNote = async id => {\n    //TODO: API CALL\n    const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjE1MmMxYzQ0MDc2N2I0YzRmNmVhNzA5In0sImlhdCI6MTYzMjgxMzUwOH0.tppekgz-Ztj1cyCEwp2CYG93NbhuBKXW8dNfcxAvXaw\"\n      } //   body: JSON.stringify({ title, description, tag }),\n\n    });\n    const json = await response.json();\n    console.log(json);\n    console.log(\"Deleting the note with id\" + id); // const json = response.json()\n\n    const newNotes = notes.filter(note => {\n      return note._id !== id;\n    });\n    setNotes(newNotes);\n  }; //Edit a Note\n\n\n  const editNote = async (id, title, description, tag) => {\n    //API CALL\n    const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjE1MmMxYzQ0MDc2N2I0YzRmNmVhNzA5In0sImlhdCI6MTYzMjgxMzUwOH0.tppekgz-Ztj1cyCEwp2CYG93NbhuBKXW8dNfcxAvXaw\"\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const json = await response.json();\n    console.log(json);\n    let newNotes = JSON.parse(JSON.stringify(notes)); //Logic to edit in client\n\n    for (let index = 0; index < newNotes.length; index++) {\n      const element = newNotes[index];\n\n      if (element._id === id) {\n        newNotes[index].title = title;\n        newNotes[index].description = description;\n        newNotes[index].tag = tag;\n        break;\n      }\n    }\n\n    console.log(newNotes);\n    setNotes(newNotes);\n  }; // const s1 = {\n  //     \"name\": \"shashank\",\n  //     \"class\": \"4a\",\n  // }\n  // const [state, setstate] = useState(s1);\n  // const update = ()=>{\n  //     setTimeout(() => {\n  //         setstate({\n  //             \"name\": \"Siddharth\",\n  //             \"class\": \"A1\"\n  //         })\n  //     }, 3000);\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(NoteContext.Provider, {\n    value: {\n      notes,\n      setNotes,\n      addNote,\n      deleteNote,\n      editNote,\n      getNotes\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NoteState, \"hccfwx9qLG83YV7VqgUOSPmOD6I=\");\n\n_c = NoteState;\nexport default NoteState;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"sources":["C:/Users/DELL/Desktop/VS. CODE/REACT JS/inotebook/src/context api/NoteState.js"],"names":["NoteContext","useState","NoteState","props","host","notesInitial","notes","setNotes","getNotes","response","fetch","method","headers","json","console","log","addNote","title","description","tag","body","JSON","stringify","note","deleteNote","id","newNotes","filter","_id","editNote","parse","index","length","element","children"],"mappings":"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","sourcesContent":["// import { useState } from \"react\";\r\nimport NoteContext from \"./notes/noteContext\";\r\nimport { useState } from \"react\";\r\n\r\nconst NoteState = (props) => {\r\n  const host = \"http://localhost:5000\";\r\n  const notesInitial = [];\r\n  const [notes, setNotes] = useState(notesInitial);\r\n\r\n  //Get all Notes\r\n  const getNotes = async () => {\r\n    //API CALL\r\n    const response = await fetch(`${host}/api/notes/fetchallnotes/`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\":\r\n          \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjE1MmMxYzQ0MDc2N2I0YzRmNmVhNzA5In0sImlhdCI6MTYzMjgxMzUwOH0.tppekgz-Ztj1cyCEwp2CYG93NbhuBKXW8dNfcxAvXaw\",\r\n      },\r\n    });\r\n    const json = await response.json();\r\n    console.log(json);\r\n    setNotes(json);\r\n  };\r\n\r\n  //Add a Note\r\n  const addNote = async (title, description, tag) => {\r\n    //TODO: API CALL\r\n    //API CALL\r\n    const response = await fetch(`${host}/api/notes/addnote`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\":\r\n          \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjE1MmMxYzQ0MDc2N2I0YzRmNmVhNzA5In0sImlhdCI6MTYzMjgxMzUwOH0.tppekgz-Ztj1cyCEwp2CYG93NbhuBKXW8dNfcxAvXaw\",\r\n      },\r\n\r\n      body: JSON.stringify({ title, description, tag }),\r\n    });\r\n    const json= await response.json();\r\n    console.log(json)\r\n\r\n    console.log(\"adding a new note\");\r\n    const note = json;\r\n   // const note = await response.json()\r\n    \r\n    //here concat return new array.\r\n  };\r\n\r\n  //Delete a Note\r\n  const deleteNote = async (id) => {\r\n    //TODO: API CALL\r\n    const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\r\n      method: \"DELETE\",\r\n\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjE1MmMxYzQ0MDc2N2I0YzRmNmVhNzA5In0sImlhdCI6MTYzMjgxMzUwOH0.tppekgz-Ztj1cyCEwp2CYG93NbhuBKXW8dNfcxAvXaw\",\r\n      },\r\n\r\n    //   body: JSON.stringify({ title, description, tag }),\r\n    });\r\n    const json = await response.json();\r\n    console.log(json)\r\n\r\n\r\n    console.log(\"Deleting the note with id\" + id);\r\n   // const json = response.json()\r\n    const newNotes = notes.filter((note) => {\r\n      return note._id !== id;\r\n    });\r\n    setNotes(newNotes);\r\n  };\r\n\r\n  //Edit a Note\r\n  const editNote = async (id, title, description, tag) => {\r\n    //API CALL\r\n    const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\r\n      method: \"PUT\",\r\n\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\":\r\n          \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjE1MmMxYzQ0MDc2N2I0YzRmNmVhNzA5In0sImlhdCI6MTYzMjgxMzUwOH0.tppekgz-Ztj1cyCEwp2CYG93NbhuBKXW8dNfcxAvXaw\",\r\n      },\r\n\r\n      body: JSON.stringify({ title, description, tag }),\r\n    });\r\n    const json =await response.json();\r\n    console.log(json)\r\n\r\n   let newNotes = JSON.parse(JSON.stringify(notes))\r\n\r\n    //Logic to edit in client\r\n    for (let index = 0; index < newNotes.length; index++) {\r\n      const element = newNotes[index];\r\n      if (element._id === id) {\r\n        newNotes[index].title = title;\r\n        newNotes[index].description = description;\r\n        newNotes[index].tag = tag;\r\n        break;\r\n      }\r\n     \r\n    }\r\n    console.log(newNotes);\r\n    setNotes(newNotes);\r\n  };\r\n\r\n  // const s1 = {\r\n  //     \"name\": \"shashank\",\r\n  //     \"class\": \"4a\",\r\n  // }\r\n\r\n  // const [state, setstate] = useState(s1);\r\n  // const update = ()=>{\r\n  //     setTimeout(() => {\r\n  //         setstate({\r\n  //             \"name\": \"Siddharth\",\r\n  //             \"class\": \"A1\"\r\n  //         })\r\n  //     }, 3000);\r\n  // }\r\n  return (\r\n    <NoteContext.Provider\r\n      value={{ notes, setNotes, addNote, deleteNote, editNote, getNotes }}\r\n    >\r\n      {props.children}\r\n    </NoteContext.Provider>\r\n  );\r\n};\r\nexport default NoteState;\r\n"]},"metadata":{},"sourceType":"module"}